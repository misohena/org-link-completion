#+TITLE: やりたいことリスト

* Inbox
** TODO coderefの)を補完する
** TODO pathの補完終了時に][を挿入する
** TODO ]と[の間等で補完できるようにする
- |[[ => [[を補完する
- [|[ => [を補完する
- ]|[ => [を補完する
- ]|] => ]を補完する
- ]]| => 何もしない

** TODO fileタイプで::以降の記法を補完する
[[https://orgmode.org/manual/Search-Options.html][Search Options (The Org Manual)]]
- ::NNN
- ::My Target
- ::*headline
- ::#custom-id
- ::/regexp/

空のファイル名は現在のファイルを検索する。[[file:::fileタイプで]] [[fileタイプで]] どちらでも良い。

** TODO ファイル名の説明部分を補完する
補完候補:
- orgファイルの場合はTITLE
- htmlファイルの場合はtitle要素
- 拡張子を除いたベース名だけ
- ファイル名だけ
- 絶対パス

* Finished
** DONE 「#」で始まる内部リンクを補完する(customid)
CLOSED: [2024-02-24 Sat 13:30]
** DONE 「*」で始まる内部リンクを補完する(見出し)
CLOSED: [2024-02-24 Sat 13:30]
** DONE #や*以外の内部リンクを補完する
CLOSED: [2024-02-24 Sat 21:53]
次の順番で探すらしい。
1. dedicated target << と >> で囲まれた単語
2. 要素の名前 (#+NAME:)
3. 見出し(ただし[[elisp-variable:org-link-search-must-match-exact-headline]]の影響を受ける)
4. 全単語

見出しは「*」を使うべきなので補完しないことにする。全単語も論外。

# [[TODO #や*以外のページ内リンクを補完する]]
見出しを探す動作は今ひとつ分からない。
org-link-search-must-match-exact-headlineがデフォルトの'query-to-createだとジャンプはするのに新しい見出しを作るか聞いてくる。

リンクタイプの補完と被るのが困り処。
** DONE タイプが省略されたファイル名を補完する
CLOSED: [2024-02-24 Sat 13:34]
/ や ./ 、 ~/ c:/等 で始まるものはファイル名として補完する。
単にファイル名だけだと内部リンクになる。
** DONE 内部リンクの説明部分を補完する
CLOSED: [2024-02-24 Sat 22:45]
補完候補:
- リンクの文字列そのもの(*や#を取り除く)
- +段落のテキスト+
- その行のテキスト
- 見出し
** DONE あらゆるリンクの説明部分を他のリンクから推測する
CLOSED: [2024-02-25 Sun 01:47]
パス部分と一致する他のリンクを探して、その説明部分を補完候補にする。
** DONE あらゆるリンクのパス部分を他のリンクから推測する
CLOSED: [2024-02-25 Sun 01:47]
タイプ部分と一致する他のリンクを探して、そのパス部分を補完候補にする。
** DONE 関数名や変数名を整える
CLOSED: [2024-02-25 Sun 13:37]
- -capf-は意味が無いので取り除く
- 関数名の-defaultは取り除く
- 関数を入れる変数名に-functionを付ける
- 変数名の-functionsと-functionが似すぎているので-kind-functionsにする
